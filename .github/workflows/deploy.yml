name: CD

on:
  workflow_run:
    workflows: ["CI"]
    branches: ["main", "build-prod-workflow"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted # Run this job on your self-hosted runner
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure full git history is fetched, including tags

      - name: Set GitHub user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "actions@github.com"

      - name: Create values file
        run: |
          TAG=$(git describe --tags --abbrev=0)
          cat <<EOF > values.yaml
          imagesConfiguration:
            global:
              tag: "$TAG"
            custom:
              symfony:
                repo: ghcr.io/erebor-org/erebor/symfony
              front:
                repo: ghcr.io/erebor-org/erebor/nginx
          deployments:
            app:
              containers:
                nginx:
                  resources:
                    limits:
                      cpu: 500m
                      memory: 500Mi
                  config:
                    VITE_SYMFONY_URL: "${{ vars.VITE_SYMFONY_URL }}"
                symfony:
                  resources:
                    limits:
                      cpu: 1000m
                      memory: 2Gi
                  config:
                    APP_ENV: "${{ vars.APP_ENV }}"
                    APP_SECRET: "${{ secrets.APP_SECRET }}"
                    DATABASE_URL: "${{ secrets.DATABASE_URL }}"
                    MESSENGER_TRANSPORT_DSN: "${{ secrets.MESSENGER_TRANSPORT_DSN }}"
                    MAILER_DSN: "${{ secrets.MAILER_DSN }}"
                    CORS_ALLOW_ORIGIN: "${{ vars.CORS_ALLOW_ORIGIN }}"
                    JWT_SECRET_KEY: "${{ vars.JWT_SECRET_KEY }}"
                    JWT_PUBLIC_KEY: "${{ vars.JWT_PUBLIC_KEY }}"
                    JWT_PASSPHRASE: "${{ secrets.JWT_PASSPHRASE }}"
          ingress:
            enabled: yes
            className: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
            tls:
              - secretName: erebor-tls
                hosts:
                    - erebor-dofus.fr
                    - api.erebor-dofus.fr
            hosts:
              - host: erebor-dofus.fr
                paths:
                  - path: /
                    pathType: Prefix
                    serviceName: nginx
                    servicePort: 80
              - host: api.erebor-dofus.fr
                paths:
                  - path: /
                    pathType: Prefix
                    serviceName: nginx
                    servicePort: 80
          imagePullSecrets:
            - name: regcred
          EOF

      # Step to pull the latest Docker image matching the tag and deploy with Helm
      - name: Deploy to Kubernetes using Helm
        run: |
          echo "Deploying version $TAG"
          helm upgrade --install erebor ./ops/helm \
            --namespace erebor --create-namespace \
            -f values.yaml
