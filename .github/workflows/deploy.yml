name: CD

on:
  workflow_run:
    workflows: ["CI"]
    branches: ["main", "build-prod-workflow"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted # Run this job on your self-hosted runner
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure full git history is fetched, including tags

      - name: Set GitHub user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "actions@github.com"

      # Step to pull the latest Docker image matching the tag and deploy with Helm
      - name: Deploy to Kubernetes using Helm
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "Deploying version $TAG"
          helm upgrade --install erebor ./ops/helm \
            --namespace erebor --create-namespace \
            -f values.prod.yaml \
            --set imagesConfiguration.global.tag=$TAG \
            --set deployments.app.containers.symfony.config.APP_ENV="${{ vars.APP_ENV }}" \
            --set deployments.app.containers.symfony.config.APP_SECRET="${{ secrets.APP_SECRET }}" \
            --set deployments.app.containers.symfony.config.DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            --set deployments.app.containers.symfony.config.MESSENGER_TRANSPORT_DSN="${{ secrets.MESSENGER_TRANSPORT_DSN }}" \
            --set deployments.app.containers.symfony.config.MAILER_DSN="${{ secrets.MAILER_DSN }}" \
            --set deployments.app.containers.symfony.config.CORS_ALLOW_ORIGIN="${{ vars.CORS_ALLOW_ORIGIN }}" \
            --set deployments.app.containers.symfony.config.JWT_SECRET_KEY="${{ vars.JWT_SECRET_KEY }}" \
            --set deployments.app.containers.symfony.config.JWT_PUBLIC_KEY="${{ vars.JWT_PUBLIC_KEY }}" \
            --set deployments.app.containers.symfony.config.JWT_PASSPHRASE="${{ secrets.JWT_PASSPHRASE }}" \
            --set deployments.app.containers.nginx.config.VITE_SYMFONY_URL="${{ vars.VITE_SYMFONY_URL }}"
