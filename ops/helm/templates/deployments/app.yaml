{{- $name := "app" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "erebor.fullname" . }}-{{ $name }}
  namespace: {{ template "erebor.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    {{- (include "erebor.commonLabels" .) | nindent 4 }}
    {{- if .Values.deployments.app.labels }}
    {{- toYaml .Values.deployments.app.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- (include "erebor.globalAnnotations" . ) | nindent 4 }}
    {{- if .Values.deployments.app.annotations }}
    {{- toYaml .Values.deployments.app.annotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ default 1 .Values.deployments.app.replicas }}
  selector:
    matchLabels:
      {{ include "erebor.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: {{ $name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        {{- (include "erebor.commonLabels" .) | nindent 8 }}
        {{- if .Values.deployments.app.labels }}
        {{- toYaml .Values.deployments.app.labels | nindent 8 }}
        {{- end }}
      annotations:
        {{- (include "erebor.globalAnnotations" . ) | nindent 8 }}
        {{- if .Values.deployments.app.annotations }}
        {{- toYaml .Values.deployments.app.annotations | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: nginx
          image: {{ include "erebor.nginxImage.url" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.deployments.app.containers.nginx.imagePullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "erebor.fullname" . }}-nginx-config
          ports:
            - containerPort: 80
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          {{- if .Values.deployments.app.containers.nginx.resources }}
          {{- with .Values.deployments.app.containers.nginx.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end -}}
          {{- else }}
          {{- end }}
        - name: symfony
          image: {{ include "erebor.symfonyImage.url" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.deployments.app.containers.symfony.imagePullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "erebor.fullname" . }}-symfony-config
          ports:
            - containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          {{- if .Values.deployments.app.containers.symfony.resources }}
          {{- with .Values.deployments.app.containers.symfony.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end -}}
          {{- else }}
          {{- end }}
          volumeMounts:
            - name: pem-volume
              readOnly: true
              mountPath: /var/www/html/config/jwt/private.pem
              subPath: private.pem
            - name: pem-volume
              readOnly: true
              mountPath: /var/www/html/config/jwt/public.pem
              subPath: public.pem
      volumes:
        - name: pem-volume
          secret:
            secretName: {{ include "erebor.fullname" . }}-pem-files
            items:
              - key: JWT_SECRET_KEY_BASE64
                path: private.pem
              - key: JWT_PUBLIC_KEY_BASE64
                path: public.pem
            defaultMode: 420
      {{- (include "erebor.imagePullSecrets" .) | nindent 6 }}
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ default 30 .Values.deployments.app.terminationGracePeriodSeconds }}
