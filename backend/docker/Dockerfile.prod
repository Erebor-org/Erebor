# Build dependencies
FROM php:8.3-cli AS builder

WORKDIR /app
# Install dependencies
RUN apt-get update && apt-get install -y \
    git \
    unzip \
    libpq-dev \
    && docker-php-ext-install pdo pdo_pgsql
    

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install Symfony CLI
RUN curl -sS https://get.symfony.com/cli/installer | bash \
    && mv /root/.symfony*/bin/symfony /usr/local/bin/symfony
COPY ./backend/composer.* ./
RUN composer install --no-dev --no-scripts --no-autoloader

COPY ./backend ./
RUN composer dump-autoload --optimize

# Production image
FROM php:8.3-fpm-alpine

# Install system dependencies
RUN apk add --no-cache \
    icu-dev \
    libzip-dev \
    postgresql-dev

# Install PHP extensions
RUN docker-php-ext-install \
    pdo_pgsql \
    intl \
    zip \
    opcache

# Configure opcache
COPY ./backend/docker/php/opcache.ini /usr/local/etc/php/conf.d/opcache.ini

# Set up application
WORKDIR /var/www/html

# Copy application files
COPY --from=builder /app /var/www/html
COPY ./backend/docker/php/php.ini /usr/local/etc/php/conf.d/php.ini

# Create necessary directories and set permissions
RUN mkdir -p /var/www/html/var \
    && mkdir -p /var/www/html/var/cache \
    && mkdir -p /var/www/html/var/log \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 777 /var/www/html/var

RUN echo "APP_ENV=prod" > .env

EXPOSE 9000

CMD ["php-fpm"]
